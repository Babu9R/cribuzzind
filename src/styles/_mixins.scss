// ===========================================
// THEME MIXINS AND UTILITIES
// ===========================================

// Import variables
@use 'variables' as *;

// ===========================================
// THEME MIXINS
// ===========================================

// Mixin to apply theme colors
@mixin theme-colors($theme-map) {
  @each $key, $value in $theme-map {
    --#{$key}: #{$value};
  }
}

// Mixin for dark theme
@mixin dark-theme {
  @include theme-colors($dark-theme);
}

// Mixin for light theme
@mixin light-theme {
  @include theme-colors($light-theme);
}

// ===========================================
// RESPONSIVE MIXINS
// ===========================================

@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (min-width: #{$breakpoint-2xl}) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == md {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == lg {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (max-width: #{$breakpoint-2xl - 1px}) { @content; }
  }
}

// ===========================================
// COMPONENT MIXINS
// ===========================================

// Button mixin
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  text-decoration: none;
  border: none;
  border-radius: $border-radius-md;
  cursor: pointer;
  transition: all $transition-normal;
  user-select: none;
  
  &:focus {
    outline: 2px solid theme-color('input-focus');
    outline-offset: 2px;
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color, $hover-bg) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover:not(:disabled) {
    background-color: $hover-bg;
    transform: translateY(-1px);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
  }
}

// Card mixin
@mixin card-base {
  background-color: theme-color('bg-card');
  border: 1px solid theme-color('border-primary');
  border-radius: $card-border-radius;
  padding: $card-padding;
  box-shadow: $shadow-sm;
  transition: all $transition-normal;
  
  &:hover {
    box-shadow: $shadow-md;
    transform: translateY(-2px);
  }
}

// Input mixin
@mixin input-base {
  width: 100%;
  padding: $input-padding;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  background-color: theme-color('input-bg');
  border: 1px solid theme-color('input-border');
  border-radius: $input-border-radius;
  color: theme-color('text-primary');
  transition: all $transition-normal;
  
  &:focus {
    outline: none;
    border-color: theme-color('input-focus');
    box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);
  }
  
  &::placeholder {
    color: theme-color('text-muted');
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Text utilities
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Position utilities
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin sticky-top($offset: 0) {
  position: sticky;
  top: $offset;
  z-index: $z-index-sticky;
}

// Animation utilities
@mixin fade-in($duration: $transition-normal) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@mixin slide-in-up($duration: $transition-normal) {
  transform: translateY(20px);
  opacity: 0;
  animation: slideInUp $duration ease-out forwards;
}

// ===========================================
// KEYFRAME ANIMATIONS
// ===========================================

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -30px, 0);
  }
  70% {
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

// ===========================================
// UTILITY CLASSES
// ===========================================

// Display utilities
.d-none { display: none !important; }
.d-block { display: block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-grid { display: grid !important; }

// Flexbox utilities
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }

.justify-start { justify-content: flex-start !important; }
.justify-end { justify-content: flex-end !important; }
.justify-center { justify-content: center !important; }
.justify-between { justify-content: space-between !important; }
.justify-around { justify-content: space-around !important; }

.align-start { align-items: flex-start !important; }
.align-end { align-items: flex-end !important; }
.align-center { align-items: center !important; }
.align-stretch { align-items: stretch !important; }

// Text utilities
.text-left { text-align: left !important; }
.text-center { text-align: center !important; }
.text-right { text-align: right !important; }
.text-justify { text-align: justify !important; }

.text-truncate {
  @include text-truncate;
}

// Font weight utilities
.fw-light { font-weight: $font-weight-light !important; }
.fw-normal { font-weight: $font-weight-normal !important; }
.fw-medium { font-weight: $font-weight-medium !important; }
.fw-semibold { font-weight: $font-weight-semibold !important; }
.fw-bold { font-weight: $font-weight-bold !important; }

// Font size utilities
.fs-xs { font-size: $font-size-xs !important; }
.fs-sm { font-size: $font-size-sm !important; }
.fs-base { font-size: $font-size-base !important; }
.fs-lg { font-size: $font-size-lg !important; }
.fs-xl { font-size: $font-size-xl !important; }
.fs-2xl { font-size: $font-size-2xl !important; }
.fs-3xl { font-size: $font-size-3xl !important; }
.fs-4xl { font-size: $font-size-4xl !important; }

// Spacing utilities
@each $size, $value in (
  xs: $spacing-xs,
  sm: $spacing-sm,
  md: $spacing-md,
  lg: $spacing-lg,
  xl: $spacing-xl,
  2xl: $spacing-2xl,
  3xl: $spacing-3xl,
  4xl: $spacing-4xl
) {
  .m-#{$size} { margin: $value !important; }
  .mt-#{$size} { margin-top: $value !important; }
  .mr-#{$size} { margin-right: $value !important; }
  .mb-#{$size} { margin-bottom: $value !important; }
  .ml-#{$size} { margin-left: $value !important; }
  .mx-#{$size} { margin-left: $value !important; margin-right: $value !important; }
  .my-#{$size} { margin-top: $value !important; margin-bottom: $value !important; }
  
  .p-#{$size} { padding: $value !important; }
  .pt-#{$size} { padding-top: $value !important; }
  .pr-#{$size} { padding-right: $value !important; }
  .pb-#{$size} { padding-bottom: $value !important; }
  .pl-#{$size} { padding-left: $value !important; }
  .px-#{$size} { padding-left: $value !important; padding-right: $value !important; }
  .py-#{$size} { padding-top: $value !important; padding-bottom: $value !important; }
}

// Border radius utilities
.rounded-sm { border-radius: $border-radius-sm !important; }
.rounded-md { border-radius: $border-radius-md !important; }
.rounded-lg { border-radius: $border-radius-lg !important; }
.rounded-xl { border-radius: $border-radius-xl !important; }
.rounded-2xl { border-radius: $border-radius-2xl !important; }
.rounded-full { border-radius: $border-radius-full !important; }

// Shadow utilities
.shadow-sm { box-shadow: $shadow-sm !important; }
.shadow-md { box-shadow: $shadow-md !important; }
.shadow-lg { box-shadow: $shadow-lg !important; }
.shadow-xl { box-shadow: $shadow-xl !important; }
.shadow-none { box-shadow: none !important; }

// Position utilities
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

// Width utilities
.w-25 { width: 25% !important; }
.w-50 { width: 50% !important; }
.w-75 { width: 75% !important; }
.w-100 { width: 100% !important; }
.w-auto { width: auto !important; }

// Height utilities
.h-25 { height: 25% !important; }
.h-50 { height: 50% !important; }
.h-75 { height: 75% !important; }
.h-100 { height: 100% !important; }
.h-auto { height: auto !important; }

// Overflow utilities
.overflow-hidden { overflow: hidden !important; }
.overflow-auto { overflow: auto !important; }
.overflow-scroll { overflow: scroll !important; }
.overflow-visible { overflow: visible !important; }
